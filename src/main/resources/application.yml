server:
  port: 8080
spring:
  main:
    allow-bean-definition-overriding: true
  data:
    mongodb:
      database: frauddb
  cloud:
    stream:
      function:
        definition: consume;produce
      default-binder: kafka
      default:
        producer:
          useNativeEncoding: true
        consumer:
          useNativeEncoding: true
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
          schema.registry.url: http://localhost:8081
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: ${spring.cloud.stream.kafka.binder.schema.registry.url}
            specific.avro.reader: true
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            schema.registry.url: ${spring.cloud.stream.kafka.binder.schema.registry.url}
        bindings:
          consume-in-0:
            binder: kafka
            group: ${spring.application.name}
            destination: order-validation-topic
            content-type: application/*+avro
          produce-out-0:
            binder: kafka
            destination: orders-topic
            content-type: application/*+avro
